[tool:pytest]
# py.test configuration: http://doc.pytest.org/en/latest/customize.html
norecursedirs = tests/fixtures *.egg .eggs data dist build docs .tox .git __pycache__
addopts =
  -r a
  --strict
  --doctest-modules
  --cov=location_extractor
  --cov-config=setup.cfg
  --cov-report=term-missing
  --isort


[isort]
line_length = 79
indent = 4
# use Vertical Hanging Indent mode
multi_line_output = 3
# add one line between `import abc` and `from abc import ABC`
lines_between_types = 1
# add a trailing comma to the end of from imports
include_trailing_comma = 1
# add projects module to first party category
known_first_party = location_extractor
# place imports, which section cannot be determined, to third party category
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER


[flake8]
format = wemake
show-source = True
doctests = False
enable-extensions = G
statistics = False
# Plugins:
max-complexity = 6
max-line-length = 79

exclude =
  .git
  __pycache__
  .venv
  .eggs
  *.egg
  temp
  data


ignore =
    # D100: missing docstring in public module
    D100,
    # D104: missing docstring in public package
    D104,
    # W504: line break after binary operator
    W504,
    # DAR1##: violations related to docstring's Args section
    DAR1,
    # DAR2##: violations related to docstring's Returns section
    DAR2,
    # DAR3##: violations related to docstring's Yields section
    DAR3,
    # WPS305 Found `f` string
    WPS305
    # WPS306 Found class without a base class: NERExtractor
    WPS306,

per-file-ignores =
  # N806: variable in function should be lowercase
  # S101: usage of multiple `assert`s detected.
  # WPS226: Found string constant over-use: XXX
  tests/test_*.py: N806, S101, WPS226,
  # WPS412: found `__init__.py` module with logic
  location_extractor/__init__.py: WPS412,


[coverage:run]
branch = True
source = location_extractor
omit =
    *data*,
data_file = .tests_reports/.coverage

[coverage:report]
skip_covered = True
show_missing = True
sort = Cover
exclude_lines =
    pragma: no cover
    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError
    except ImportError
    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

[coverage:xml]
output = .tests_reports/coverage.xml

[coverage:html]
directory = .tests_reports/htmlcov/


[wily]
operators = cyclomatic,maintainability,mccabe,raw
archiver = git
path = .
max_revisions = 50
